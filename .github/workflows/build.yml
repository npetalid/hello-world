name: TestBuild

on:
  push:
    branches:
      - stable
  workflow_dispatch:

jobs:
  build:
    runs-on: self-hosted

    steps:
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}


    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Github config
      run: |
        git config user.email "nikos@petalidis.gr"
        git config user.name "Nikos Petalidis"

    - name: Echo build number
      run: echo ${{github.run_number}}

    - name: Run build script
      run: mvn clean install

    - name: Set Version
      run: |
          export VERSION="1.0.${{ github.run_number }}"
          echo "VERSION=1.0.${{ github.run_number }}" >> $GITHUB_ENV

    - name: Build docker
      run: |
        docker build -t ghcr.io/npetalid/app:latest -t ghcr.io/npetalid/app:1.0.${{ github.run_number }} .
        docker push --all-tags ghcr.io/npetalid/app
        git fetch --tags

    - name: "Build Changelog"
      id: build_changelog
      run: |
        export LAST_TAG=`git for-each-ref 'refs/tags/myrel-*'  --sort=-authordate  --format='%(refname:short)' --count=1`
        echo '# Release notes (${{ env.VERSION }})'  > CHANGELOG.md
        echo 'Docker file: ghcr.io/npetalid/app:1.0.${{ github.run_number }}' >> CHANGELOG.md
        echo '## Feats' >> CHANGELOG.md
        git log --no-merges --grep='^feat' $LAST_TAG..HEAD  --format=%B >> CHANGELOG.md
        echo '## Bugfixes' >> CHANGELOG.md
        git log --no-merges --grep='^fix'  $LAST_TAG..HEAD  --format=%B >> CHANGELOG.md
    - name: Create release files
      run: |
        tar cvzf myrel-${{ env.VERSION }}.tgz .

    - name: Create Release
      id: create_release
      uses: ncipollo/release-action@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag: myrel-${{ env.VERSION }}
        commit: "stable"
        bodyFile: "CHANGELOG.md"
        artifacts: "myrel-${{ env.VERSION }}.tgz"
        draft: false
        prerelease: false

    - name: Tag and Push
      run: |
        git tag "myrel-${{ env.VERSION }}"
        git push origin "myrel-${{ env.VERSION }}"
